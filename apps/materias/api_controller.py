# api/hooks/controllers/materias_controller.py
from ninja_extra import api_controller, http_post
from ninja_extra.controllers import ControllerBase
from django.http import JsonResponse
from apps.moodle.api_client import call_moodle_api
from apps.materias.models import Materia, MateriaAlumno
from apps.users.models import Alumno
from apps.materias.schemas import MateriaHookIn
from apps.comun.auth import APIKeyAuth

@api_controller("/hooks/materias/", tags=["Materias"], auth=APIKeyAuth())
class MateriasHookController(ControllerBase):

    @http_post("/", url_name="recibir_materias")
    def recibir_materias(self, request, data: MateriaHookIn):
        try:
            alumno = Alumno.objects.get(alumno_moodle_id=data.userid)
        except Alumno.DoesNotExist:
            return JsonResponse({"error": "Alumno no encontrado en Django"}, status=404)

        cursos = call_moodle_api('core_enrol_get_users_courses', {'userid': data.userid})
        if not cursos:
            return {"status": "ok", "materias": [], "mensaje": "Sin cursos encontrados"}

        materias_creadas = []

        for curso in cursos:
            print(f"Curso: {curso}")

            # Obtener categoría como etiqueta
            categorias = call_moodle_api('core_course_get_categories', {
                'criteria[0][key]': 'id',
                'criteria[0][value]': curso['category']
            })
            print(f"Categorías: {categorias}")
            etiqueta = categorias[0]['name'] if categorias else 'Sin categoría'

            materia, created = Materia.objects.update_or_create(
                moodle_id=curso['id'],
                defaults={
                    'nombre': curso['fullname'],
                    'etiqueta': etiqueta
                }
            )

            MateriaAlumno.objects.get_or_create(
                alumno=alumno,
                materia=materia
            )

            materias_creadas.append({
                "nombre": materia.nombre,
                "etiqueta": materia.etiqueta,
                "creada": created
            })

        return {
            "status": "ok",
            "materias": materias_creadas
        }












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































